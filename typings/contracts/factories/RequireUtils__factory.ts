/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { RequireUtils } from "../RequireUtils";

export class RequireUtils__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _factory: string,
    _mainModule: string,
    overrides?: Overrides
  ): Promise<RequireUtils> {
    return super.deploy(
      _factory,
      _mainModule,
      overrides || {}
    ) as Promise<RequireUtils>;
  }
  getDeployTransaction(
    _factory: string,
    _mainModule: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_factory, _mainModule, overrides || {});
  }
  attach(address: string): RequireUtils {
    return super.attach(address) as RequireUtils;
  }
  connect(signer: Signer): RequireUtils__factory {
    return super.connect(signer) as RequireUtils__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RequireUtils {
    return new Contract(address, _abi, signerOrProvider) as RequireUtils;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mainModule",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "_imageHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_threshold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_signers",
        type: "bytes",
      },
    ],
    name: "RequiredConfig",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastWalletUpdate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_threshold",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "weight",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "signer",
            type: "address",
          },
        ],
        internalType: "struct RequireUtils.Member[]",
        name: "_members",
        type: "tuple[]",
      },
    ],
    name: "requireAndIndexConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_threshold",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "weight",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "signer",
            type: "address",
          },
        ],
        internalType: "struct RequireUtils.Member[]",
        name: "_members",
        type: "tuple[]",
      },
    ],
    name: "requireConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_nonce",
        type: "uint256",
      },
    ],
    name: "requireMinNonce",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_expiration",
        type: "uint256",
      },
    ],
    name: "requireNonExpired",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b5060405162000fda38038062000fda833981016040819052610031916100b4565b606082811b6001600160601b03191660a052604080519182019052602880825262000fb26020830139816001600160a01b03166040516020016100759291906100e6565b60408051601f198184030181529190528051602090910120608052506101259050565b80516001600160a01b03811681146100af57600080fd5b919050565b600080604083850312156100c6578182fd5b6100cf83610098565b91506100dd60208401610098565b90509250929050565b60008351815b8181101561010657602081870181015185830152016100ec565b818111156101145782828501525b509190910191825250602001919050565b60805160a05160601c610e5c62000156600039806103205280610767525080610344528061078b5250610e5c6000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063b472f0a211610050578063b472f0a214610094578063e1613123146100a7578063e717aba9146100ba57610067565b80637f29d5381461006c5780639b8d901114610081575b600080fd5b61007f61007a3660046109eb565b6100e3565b005b61007f61008f36600461094e565b610128565b61007f6100a2366004610925565b610491565b61007f6100b536600461094e565b61056f565b6100cd6100c8366004610904565b6108b0565b6040516100da9190610d95565b60405180910390f35b804210610125576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011c90610c7d565b60405180910390fd5b50565b8260005b828110156101c1578184848381811061014157fe5b9050604002016000013585858481811061015757fe5b905060400201602001602081019061016f9190610904565b60405160200161018193929190610b14565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190528051602090910120915060010161012c565b506000808673ffffffffffffffffffffffffffffffffffffffff166351605d8060e01b6040516020016101f49190610a67565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905261022c91610a94565b6000604051808303816000865af19150503d8060008114610269576040519150601f19603f3d011682016040523d82523d6000602084013e61026e565b606091505b5091509150818015610281575080516020145b156102dd5760008180602001905181019061029c91906109d3565b90508381146102d7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011c90610cda565b506103d2565b60405173ffffffffffffffffffffffffffffffffffffffff88169061036c907fff00000000000000000000000000000000000000000000000000000000000000907f00000000000000000000000000000000000000000000000000000000000000009087907f000000000000000000000000000000000000000000000000000000000000000090602001610a03565b6040516020818303038152906040528051906020012060001c73ffffffffffffffffffffffffffffffffffffffff16146103d2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011c90610bfa565b828773ffffffffffffffffffffffffffffffffffffffff167fb502b7446ca079086188acf3abef47c2f464f2ee9a72fcdf05ffcb74dcc17cee88888860405160200161041f929190610ab0565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290526104589291610d9e565b60405180910390a350505073ffffffffffffffffffffffffffffffffffffffff9093166000908152602081905260409020439055505050565b60008061049d836108c2565b9150915060008473ffffffffffffffffffffffffffffffffffffffff16638c3f5563846040518263ffffffff1660e01b81526004016104dc9190610d95565b60206040518083038186803b1580156104f457600080fd5b505afa158015610508573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052c91906109d3565b905081811015610568576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011c90610b9d565b5050505050565b8260005b82811015610608578184848381811061058857fe5b9050604002016000013585858481811061059e57fe5b90506040020160200160208101906105b69190610904565b6040516020016105c893929190610b14565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905280516020909101209150600101610573565b506000808673ffffffffffffffffffffffffffffffffffffffff166351605d8060e01b60405160200161063b9190610a67565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905261067391610a94565b6000604051808303816000865af19150503d80600081146106b0576040519150601f19603f3d011682016040523d82523d6000602084013e6106b5565b606091505b50915091508180156106c8575080516020145b15610724576000818060200190518101906106e391906109d3565b905083811461071e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011c90610b40565b50610819565b60405173ffffffffffffffffffffffffffffffffffffffff8816906107b3907fff00000000000000000000000000000000000000000000000000000000000000907f00000000000000000000000000000000000000000000000000000000000000009087907f000000000000000000000000000000000000000000000000000000000000000090602001610a03565b6040516020818303038152906040528051906020012060001c73ffffffffffffffffffffffffffffffffffffffff1614610819576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011c90610d37565b828773ffffffffffffffffffffffffffffffffffffffff167fb502b7446ca079086188acf3abef47c2f464f2ee9a72fcdf05ffcb74dcc17cee888888604051602001610866929190610ab0565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905261089f9291610d9e565b60405180910390a350505050505050565b60006020819052908152604090205481565b606081901c916bffffffffffffffffffffffff90911690565b803573ffffffffffffffffffffffffffffffffffffffff811681146108ff57600080fd5b919050565b600060208284031215610915578081fd5b61091e826108db565b9392505050565b60008060408385031215610937578081fd5b610940836108db565b946020939093013593505050565b60008060008060608587031215610963578182fd5b61096c856108db565b935060208501359250604085013567ffffffffffffffff8082111561098f578384fd5b818701915087601f8301126109a2578384fd5b8135818111156109b0578485fd5b8860206040830285010111156109c4578485fd5b95989497505060200194505050565b6000602082840312156109e4578081fd5b5051919050565b6000602082840312156109fc578081fd5b5035919050565b7fff0000000000000000000000000000000000000000000000000000000000000094909416845260609290921b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001660018401526015830152603582015260550190565b7fffffffff0000000000000000000000000000000000000000000000000000000091909116815260040190565b60008251610aa6818460208701610df6565b9190910192915050565b6020808252818101839052600090604080840186845b87811015610b07578135835273ffffffffffffffffffffffffffffffffffffffff610af28684016108db565b16838601529183019190830190600101610ac6565b5090979650505050505050565b928352602083019190915273ffffffffffffffffffffffffffffffffffffffff16604082015260600190565b60208082526031908201527f526571756972655574696c732372657175697265436f6e6669673a20554e455860408201527f5045435445445f494d4147455f48415348000000000000000000000000000000606082015260800190565b60208082526032908201527f526571756972655574696c7323726571756972654d696e4e6f6e63653a204e4f60408201527f4e43455f42454c4f575f52455155495245440000000000000000000000000000606082015260800190565b60208082526048908201527f526571756972655574696c732372657175697265416e64496e646578436f6e6660408201527f69673a20554e45585045435445445f434f554e5445524641435455414c5f494d60608201527f4147455f48415348000000000000000000000000000000000000000000000000608082015260a00190565b60208082526027908201527f526571756972655574696c7323726571756972654e6f6e457870697265643a2060408201527f4558504952454400000000000000000000000000000000000000000000000000606082015260800190565b60208082526039908201527f526571756972655574696c732372657175697265416e64496e646578436f6e6660408201527f69673a20554e45585045435445445f494d4147455f4841534800000000000000606082015260800190565b602080825260409082018190527f526571756972655574696c732372657175697265436f6e6669673a20554e4558908201527f5045435445445f434f554e5445524641435455414c5f494d4147455f48415348606082015260800190565b90815260200190565b6000838252604060208301528251806040840152610dc3816060850160208701610df6565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016060019392505050565b60005b83811015610e11578181015183820152602001610df9565b83811115610e20576000848401525b5050505056fea2646970667358221220c9b9fbd25e006a8e4a0640457be6beef7b76582e7a792f5fc4a1c6373b5e75d364736f6c63430007060033603a600e3d39601a805130553df3363d3d373d3d3d363d30545af43d82803e903d91601857fd5bf3";

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { SequenceUtils } from "../SequenceUtils";

export class SequenceUtils__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _factory: string,
    _mainModule: string,
    overrides?: Overrides
  ): Promise<SequenceUtils> {
    return super.deploy(
      _factory,
      _mainModule,
      overrides || {}
    ) as Promise<SequenceUtils>;
  }
  getDeployTransaction(
    _factory: string,
    _mainModule: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_factory, _mainModule, overrides || {});
  }
  attach(address: string): SequenceUtils {
    return super.attach(address) as SequenceUtils;
  }
  connect(signer: Signer): SequenceUtils__factory {
    return super.connect(signer) as SequenceUtils__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SequenceUtils {
    return new Contract(address, _abi, signerOrProvider) as SequenceUtils;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mainModule",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "_imageHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_threshold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_signers",
        type: "bytes",
      },
    ],
    name: "RequiredConfig",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "callBalanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "callBlockNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_i",
        type: "uint256",
      },
    ],
    name: "callBlockhash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "callChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "callCode",
    outputs: [
      {
        internalType: "bytes",
        name: "code",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "callCodeHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "codeHash",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "callCodeSize",
    outputs: [
      {
        internalType: "uint256",
        name: "size",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "callCoinbase",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "callDifficulty",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "callGasLeft",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "callGasLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "callGasPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "callOrigin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "callTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastWalletUpdate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "delegateCall",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "revertOnError",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "gasLimit",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IModuleCalls.Transaction[]",
        name: "_txs",
        type: "tuple[]",
      },
    ],
    name: "multiCall",
    outputs: [
      {
        internalType: "bool[]",
        name: "_successes",
        type: "bool[]",
      },
      {
        internalType: "bytes[]",
        name: "_results",
        type: "bytes[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_threshold",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "weight",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "signer",
            type: "address",
          },
        ],
        internalType: "struct RequireUtils.Member[]",
        name: "_members",
        type: "tuple[]",
      },
    ],
    name: "requireAndIndexConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_threshold",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "weight",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "signer",
            type: "address",
          },
        ],
        internalType: "struct RequireUtils.Member[]",
        name: "_members",
        type: "tuple[]",
      },
    ],
    name: "requireConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_nonce",
        type: "uint256",
      },
    ],
    name: "requireMinNonce",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_expiration",
        type: "uint256",
      },
    ],
    name: "requireNonExpired",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620019b0380380620019b08339810160408190526200003491620000cd565b8181816001600160a01b031660a0816001600160a01b031660601b815250506040518060600160405280602881526020016200198860289139816001600160a01b03166040516020016200008a92919062000104565b60408051601f198184030181529190528051602090910120608052506200014692505050565b80516001600160a01b0381168114620000c857600080fd5b919050565b60008060408385031215620000e0578182fd5b620000eb83620000b0565b9150620000fb60208401620000b0565b90509250929050565b60008351815b818110156200012657602081870181015185830152016200010a565b81811115620001355782828501525b509190910191825250602001919050565b60805160a05160601c61181162000177600039806106125280610ab25250806106365280610ad652506118116000f3fe60806040526004361061015f5760003560e01c8063c272d5c3116100c0578063e161312311610074578063e90f13e711610059578063e90f13e7146102f4578063f209883a14610369578063ffd7d7411461037e5761015f565b8063e161312314610329578063e717aba9146103495761015f565b8063c66764e1116100a5578063c66764e1146102c7578063d1db3907146102f4578063d5b5337f146103095761015f565b8063c272d5c314610292578063c39f2d5c146102a75761015f565b8063984395bc116101175780639b8d9011116100fc5780639b8d90111461023d578063aeea5fb51461025d578063b472f0a2146102725761015f565b8063984395bc1461020657806398f9fbc4146102285761015f565b806348acd29f1161014857806348acd29f146101a4578063543196eb146101c45780637f29d538146101e45761015f565b80630fdecfac1461016457806343d9c9351461018f575b600080fd5b34801561017057600080fd5b5061017961039f565b60405161018691906113b2565b60405180910390f35b34801561019b57600080fd5b506101796103a3565b3480156101b057600080fd5b506101796101bf366004610f51565b6103ab565b3480156101d057600080fd5b506101796101df366004610f51565b6103c9565b3480156101f057600080fd5b506102046101ff366004611178565b6103cd565b005b34801561021257600080fd5b5061021b610412565b6040516101869190611287565b34801561023457600080fd5b5061021b610416565b34801561024957600080fd5b50610204610258366004610f9b565b61041a565b34801561026957600080fd5b50610179610783565b34801561027e57600080fd5b5061020461028d366004610f72565b610787565b34801561029e57600080fd5b50610179610865565b3480156102b357600080fd5b506101796102c2366004610f51565b610869565b3480156102d357600080fd5b506102e76102e2366004610f51565b61086d565b60405161018691906113e7565b34801561030057600080fd5b506101796108b2565b34801561031557600080fd5b50610179610324366004611178565b6108b6565b34801561033557600080fd5b50610204610344366004610f9b565b6108ba565b34801561035557600080fd5b50610179610364366004610f51565b610bfb565b34801561037557600080fd5b50610179610c0d565b61039161038c366004611020565b610c11565b6040516101869291906112a8565b4690565b60005a905090565b73ffffffffffffffffffffffffffffffffffffffff8116315b919050565b3f90565b80421061040f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610406906115f1565b60405180910390fd5b50565b3290565b4190565b8260005b828110156104b3578184848381811061043357fe5b9050604002016000013585858481811061044957fe5b90506040020160200160208101906104619190610f51565b604051602001610473939291906113bb565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190528051602090910120915060010161041e565b506000808673ffffffffffffffffffffffffffffffffffffffff166351605d8060e01b6040516020016104e6919061123e565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905261051e9161126b565b6000604051808303816000865af19150503d806000811461055b576040519150601f19603f3d011682016040523d82523d6000602084013e610560565b606091505b5091509150818015610573575080516020145b156105cf5760008180602001905181019061058e9190611160565b90508381146105c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104069061164e565b506106c4565b60405173ffffffffffffffffffffffffffffffffffffffff88169061065e907fff00000000000000000000000000000000000000000000000000000000000000907f00000000000000000000000000000000000000000000000000000000000000009087907f0000000000000000000000000000000000000000000000000000000000000000906020016111da565b6040516020818303038152906040528051906020012060001c73ffffffffffffffffffffffffffffffffffffffff16146106c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104069061156e565b828773ffffffffffffffffffffffffffffffffffffffff167fb502b7446ca079086188acf3abef47c2f464f2ee9a72fcdf05ffcb74dcc17cee88888860405160200161071192919061134e565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905261074a9291611766565b60405180910390a350505073ffffffffffffffffffffffffffffffffffffffff9093166000908152602081905260409020439055505050565b4490565b60008061079383610e81565b9150915060008473ffffffffffffffffffffffffffffffffffffffff16638c3f5563846040518263ffffffff1660e01b81526004016107d291906113b2565b60206040518083038186803b1580156107ea57600080fd5b505afa1580156107fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108229190611160565b90508181101561085e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040690611511565b5050505050565b3a90565b3b90565b60408051603f833b9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092528181529080600060208401853c50919050565b4590565b4090565b8260005b8281101561095357818484838181106108d357fe5b905060400201600001358585848181106108e957fe5b90506040020160200160208101906109019190610f51565b604051602001610913939291906113bb565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052805160209091012091506001016108be565b506000808673ffffffffffffffffffffffffffffffffffffffff166351605d8060e01b604051602001610986919061123e565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290526109be9161126b565b6000604051808303816000865af19150503d80600081146109fb576040519150601f19603f3d011682016040523d82523d6000602084013e610a00565b606091505b5091509150818015610a13575080516020145b15610a6f57600081806020019051810190610a2e9190611160565b9050838114610a69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610406906113fa565b50610b64565b60405173ffffffffffffffffffffffffffffffffffffffff881690610afe907fff00000000000000000000000000000000000000000000000000000000000000907f00000000000000000000000000000000000000000000000000000000000000009087907f0000000000000000000000000000000000000000000000000000000000000000906020016111da565b6040516020818303038152906040528051906020012060001c73ffffffffffffffffffffffffffffffffffffffff1614610b64576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610406906116ab565b828773ffffffffffffffffffffffffffffffffffffffff167fb502b7446ca079086188acf3abef47c2f464f2ee9a72fcdf05ffcb74dcc17cee888888604051602001610bb192919061134e565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052610bea9291611766565b60405180910390a350505050505050565b60006020819052908152604090205481565b4290565b606080825167ffffffffffffffff81118015610c2c57600080fd5b50604051908082528060200260200182016040528015610c56578160200160208202803683370190505b509150825167ffffffffffffffff81118015610c7157600080fd5b50604051908082528060200260200182016040528015610ca557816020015b6060815260200190600190039081610c905790505b50905060005b8351811015610e7b576000848281518110610cc257fe5b60200260200101519050806000015115610d08576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040690611709565b80604001515a1015610d46576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610406906114b4565b806060015173ffffffffffffffffffffffffffffffffffffffff1681608001518260400151600014610d7c578260400151610d7e565b5a5b908360a00151604051610d91919061126b565b600060405180830381858888f193505050503d8060008114610dcf576040519150601f19603f3d011682016040523d82523d6000602084013e610dd4565b606091505b50858481518110610de157fe5b60200260200101858581518110610df457fe5b6020026020010182905282151515158152505050838281518110610e1457fe5b602002602001015180610e3c5750848281518110610e2e57fe5b602002602001015160200151155b610e72576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040690611457565b50600101610cab565b50915091565b606081901c916bffffffffffffffffffffffff90911690565b803573ffffffffffffffffffffffffffffffffffffffff811681146103c457600080fd5b803580151581146103c457600080fd5b600082601f830112610ede578081fd5b813567ffffffffffffffff811115610ef257fe5b610f2360207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611787565b818152846020838601011115610f37578283fd5b816020850160208301379081016020019190915292915050565b600060208284031215610f62578081fd5b610f6b82610e9a565b9392505050565b60008060408385031215610f84578081fd5b610f8d83610e9a565b946020939093013593505050565b60008060008060608587031215610fb0578182fd5b610fb985610e9a565b935060208501359250604085013567ffffffffffffffff80821115610fdc578384fd5b818701915087601f830112610fef578384fd5b813581811115610ffd578485fd5b886020604083028501011115611011578485fd5b95989497505060200194505050565b60006020808385031215611032578182fd5b823567ffffffffffffffff80821115611049578384fd5b818501915085601f83011261105c578384fd5b81358181111561106857fe5b6110758485830201611787565b81815284810190848601875b84811015611151578135870160c0807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0838f030112156110bf578a8bfd5b604080518281018181108b821117156110d457fe5b82526110e1848d01610ebe565b81526110ee828501610ebe565b8c8201526060840135828201526080915061110a828501610e9a565b606082015260a084013582820152918301359189831115611129578c8dfd5b6111378f8d85870101610ece565b60a082015287525050509287019290870190600101611081565b50909998505050505050505050565b600060208284031215611171578081fd5b5051919050565b600060208284031215611189578081fd5b5035919050565b600081518084526111a88160208601602086016117ab565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b7fff0000000000000000000000000000000000000000000000000000000000000094909416845260609290921b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001660018401526015830152603582015260550190565b7fffffffff0000000000000000000000000000000000000000000000000000000091909116815260040190565b6000825161127d8184602087016117ab565b9190910192915050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b604080825283519082018190526000906020906060840190828701845b828110156112e35781511515845292840192908401906001016112c5565b5050508381038285015284518082528282019080840283018401878501865b83811015611151577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe086840301855261133c838351611190565b94870194925090860190600101611302565b6020808252818101839052600090604080840186845b878110156113a5578135835273ffffffffffffffffffffffffffffffffffffffff611390868401610e9a565b16838601529183019190830190600101611364565b5090979650505050505050565b90815260200190565b928352602083019190915273ffffffffffffffffffffffffffffffffffffffff16604082015260600190565b600060208252610f6b6020830184611190565b60208082526031908201527f526571756972655574696c732372657175697265436f6e6669673a20554e455860408201527f5045435445445f494d4147455f48415348000000000000000000000000000000606082015260800190565b60208082526027908201527f4d756c746943616c6c5574696c73236d756c746943616c6c3a2043414c4c5f5260408201527f4556455254454400000000000000000000000000000000000000000000000000606082015260800190565b60208082526028908201527f4d756c746943616c6c5574696c73236d756c746943616c6c3a204e4f545f454e60408201527f4f5547485f474153000000000000000000000000000000000000000000000000606082015260800190565b60208082526032908201527f526571756972655574696c7323726571756972654d696e4e6f6e63653a204e4f60408201527f4e43455f42454c4f575f52455155495245440000000000000000000000000000606082015260800190565b60208082526048908201527f526571756972655574696c732372657175697265416e64496e646578436f6e6660408201527f69673a20554e45585045435445445f434f554e5445524641435455414c5f494d60608201527f4147455f48415348000000000000000000000000000000000000000000000000608082015260a00190565b60208082526027908201527f526571756972655574696c7323726571756972654e6f6e457870697265643a2060408201527f4558504952454400000000000000000000000000000000000000000000000000606082015260800190565b60208082526039908201527f526571756972655574696c732372657175697265416e64496e646578436f6e6660408201527f69673a20554e45585045435445445f494d4147455f4841534800000000000000606082015260800190565b602080825260409082018190527f526571756972655574696c732372657175697265436f6e6669673a20554e4558908201527f5045435445445f434f554e5445524641435455414c5f494d4147455f48415348606082015260800190565b60208082526032908201527f4d756c746943616c6c5574696c73236d756c746943616c6c3a2064656c65676160408201527f746543616c6c206e6f7420616c6c6f7765640000000000000000000000000000606082015260800190565b60008382526040602083015261177f6040830184611190565b949350505050565b60405181810167ffffffffffffffff811182821017156117a357fe5b604052919050565b60005b838110156117c65781810151838201526020016117ae565b838111156117d5576000848401525b5050505056fea2646970667358221220673f5e74b8bc420df2714a08a4c641d77cc61e458fa168f56938110802428e6264736f6c63430007060033603a600e3d39601a805130553df3363d3d373d3d3d363d30545af43d82803e903d91601857fd5bf3";

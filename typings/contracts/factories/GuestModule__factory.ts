/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { GuestModule } from "../GuestModule";

export class GuestModule__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<GuestModule> {
    return super.deploy(overrides || {}) as Promise<GuestModule>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): GuestModule {
    return super.attach(address) as GuestModule;
  }
  connect(signer: Signer): GuestModule__factory {
    return super.connect(signer) as GuestModule__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GuestModule {
    return new Contract(address, _abi, signerOrProvider) as GuestModule;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_contract",
        type: "address",
      },
    ],
    name: "CreatedContract",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_space",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_newNonce",
        type: "uint256",
      },
    ],
    name: "NonceChange",
    type: "event",
  },
  {
    anonymous: true,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "_tx",
        type: "bytes32",
      },
    ],
    name: "TxExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "_tx",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_reason",
        type: "bytes",
      },
    ],
    name: "TxFailed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_code",
        type: "bytes",
      },
    ],
    name: "createContract",
    outputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "delegateCall",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "revertOnError",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "gasLimit",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IModuleCalls.Transaction[]",
        name: "_txs",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_hash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_signatures",
        type: "bytes",
      },
    ],
    name: "isValidSignature",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_signatures",
        type: "bytes",
      },
    ],
    name: "isValidSignature",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_space",
        type: "uint256",
      },
    ],
    name: "readNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "delegateCall",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "revertOnError",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "gasLimit",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IModuleCalls.Transaction[]",
        name: "_txs",
        type: "tuple[]",
      },
    ],
    name: "selfExecute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceID",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611a11806100206000396000f3fe60806040526004361061007b5760003560e01c80637a9a16281161004e5780637a9a1628146101255780638c3f55631461014557806390042baf14610172578063affed0e0146101925761007b565b806301ffc9a7146100805780631626ba7e146100b657806320c13b0b146100e357806361c2926c14610103575b600080fd5b34801561008c57600080fd5b506100a061009b366004611357565b6101a7565b6040516100ad919061159e565b60405180910390f35b3480156100c257600080fd5b506100d66100d136600461130d565b6101ba565b6040516100ad91906115cb565b3480156100ef57600080fd5b506100d66100fe366004611397565b610233565b34801561010f57600080fd5b5061012361011e366004611270565b61028d565b005b34801561013157600080fd5b506101236101403660046112a3565b6102ce565b34801561015157600080fd5b50610165610160366004611433565b6102f6565b6040516100ad91906115a9565b610185610180366004611400565b610322565b6040516100ad919061157d565b34801561019e57600080fd5b506101656103d6565b60006101b2826103e7565b90505b919050565b60006102046101c885610444565b84848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506104a492505050565b1561022c57507f1626ba7e000000000000000000000000000000000000000000000000000000005b9392505050565b600061025d6101c88686604051808383808284376040519201829003909120935061044492505050565b1561028557507f20c13b0b000000000000000000000000000000000000000000000000000000005b949350505050565b60006102be826040516020016102a391906116f9565b60405160208183030381529060405280519060200120610444565b90506102ca818361063b565b5050565b60006102e4846040516020016102a39190611655565b90506102f0818561063b565b50505050565b60006101b27f8d0bf1fd623d628c741362c1289948e57b3e2905218c676d3e69abee36d6ae2e836107b6565b600033301461037c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001806119b56027913960400191505060405180910390fd5b81516020830134f06040805173ffffffffffffffffffffffffffffffffffffffff8316815290519192507fa506ad4e7f05eceba62a023c3219e5bd98a615f4fa87e2afb08a2da5cf62bf0c919081900360200190a1919050565b60006103e260006102f6565b905090565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f90042baf00000000000000000000000000000000000000000000000000000000141561043b575060016101b5565b6101b2826107e3565b604080517f19010000000000000000000000000000000000000000000000000000000000006020808301919091524660228301523060601b6042830152605680830194909452825180830390940184526076909101909152815191012090565b60008060006104b284610840565b909250905061ffff821660005b855183101561061857600080806104d689876108ae565b975060ff918216945016915060018314156104fe576104f58987610928565b965090506105c1565b8261052a57606061050f8a8861099c565b9750905061051d8b82610a44565b91508285019450506105c1565b600283141561057057600061053f8a88610d73565b975061ffff16905060606105548b8984610de0565b985090506105628c82610a44565b9250838601955050506105c1565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001806117ce602c913960400191505060405180910390fd5b848282604051602001808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff16815260200193505050506040516020818303038152906040528051906020012094505050506104bf565b8361ffff168110158015610630575061063082610ecb565b979650505050505050565b60005b81518110156107b157600082828151811061065557fe5b60200260200101519050600060608260000151156106a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069f9061169c565b60405180910390fd5b82604001515a10156106e6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069f906115f8565b826060015173ffffffffffffffffffffffffffffffffffffffff168360800151846040015160001461071c57846040015161071e565b5a5b908560a001516040516107319190611561565b600060405180830381858888f193505050503d806000811461076f576040519150601f19603f3d011682016040523d82523d6000602084013e610774565b606091505b509092509050811561079b578560405161078e91906115a9565b60405180910390a06107a6565b6107a6838783610ed1565b50505060010161063e565b505050565b60408051602080820194909452808201929092528051808303820181526060909201905280519101205490565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f389901c7000000000000000000000000000000000000000000000000000000001415610837575060016101b5565b6101b282610f21565b6020810151815160f09190911c906002908111156108a9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602781526020018061181d6027913960400191505060405180910390fd5b915091565b80820160200151825160f882901c9160f01c60ff16906002840190811115610921576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806119106026913960400191505060405180910390fd5b9250925092565b80820160200151825160609190911c906014830190811115610995576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806117fa6023913960400191505060405180910390fd5b9250929050565b6040805160428082526080820190925260609160009190602082018180368337019050509150828401602001805160208401526020810151604084015260228101516042840152506042830190508351811115610995576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806118b16023913960400191505060405180910390fd5b60008082600184510381518110610a5757fe5b602001015160f81c60f81b60f81c60ff169050600083604081518110610a7957fe5b016020015160f81c90506000610a8f8582610fa9565b90506000610a9e866020610fa9565b90507f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0811115610b19576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603d815260200180611791603d913960400191505060405180910390fd5b8260ff16601b14158015610b3157508260ff16601c14155b15610b87576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603d815260200180611844603d913960400191505060405180910390fd5b6001841415610bfb5760018784848460405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610bea573d6000803e3d6000fd5b505050602060405103519450610cfd565b6002841415610cac5760018760405160200180807f19457468657265756d205369676e6564204d6573736167653a0a333200000000815250601c018281526020019150506040516020818303038152906040528051906020012084848460405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610bea573d6000803e3d6000fd5b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603c8152602001806118d4603c913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8516610d69576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806118816030913960400191505060405180910390fd5b5050505092915050565b80820160200151825160f09190911c906002830190811115610995576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806119576022913960400191505060405180910390fd5b606060008267ffffffffffffffff81118015610dfb57600080fd5b506040519080825280601f01601f191660200182016040528015610e26576020820181803683370190505b509150600080858701602001600060205b87811015610e5057908201518682015260208101610e37565b86880160200180519390920151908701525286518686019350831115610ec1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806119366021913960400191505060405180910390fd5b5050935093915050565b50600190565b826020015115610ee357805160208201fd5b7f3dbd1590ea96dd3253a91f24e64e3a502e1225d602a5731357bc12643070ccd78282604051610f149291906115b2565b60405180910390a1505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082161580610f9357507fffffffff0000000000000000000000000000000000000000000000000000000082167f36e7817500000000000000000000000000000000000000000000000000000000145b15610fa0575060016101b5565b6101b282611011565b60008160200183511015611008576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603c815260200180611979603c913960400191505060405180910390fd5b50016020015190565b7fffffffff0000000000000000000000000000000000000000000000000000000081167f01ffc9a70000000000000000000000000000000000000000000000000000000014919050565b803573ffffffffffffffffffffffffffffffffffffffff811681146101b557600080fd5b600082601f83011261108f578081fd5b8135602067ffffffffffffffff808311156110a657fe5b6110b38283850201611740565b83815282810190868401865b8681101561118f578135890160c0807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0838e030112156110fd57898afd5b604080518281018181108a8211171561111257fe5b825261111f848b0161119d565b815261112c82850161119d565b8a820152606080850135838301526080925061114983860161105b565b9082015260a08481013583830152928401359289841115611168578c8dfd5b6111768f8c868801016111ed565b90820152875250505092850192908501906001016110bf565b509098975050505050505050565b803580151581146101b557600080fd5b60008083601f8401126111be578182fd5b50813567ffffffffffffffff8111156111d5578182fd5b60208301915083602082850101111561099557600080fd5b600082601f8301126111fd578081fd5b813567ffffffffffffffff81111561121157fe5b61124260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611740565b818152846020838601011115611256578283fd5b816020850160208301379081016020019190915292915050565b600060208284031215611281578081fd5b813567ffffffffffffffff811115611297578182fd5b6102858482850161107f565b6000806000606084860312156112b7578182fd5b833567ffffffffffffffff808211156112ce578384fd5b6112da8783880161107f565b94506020860135935060408601359150808211156112f6578283fd5b50611303868287016111ed565b9150509250925092565b600080600060408486031215611321578283fd5b83359250602084013567ffffffffffffffff81111561133e578283fd5b61134a868287016111ad565b9497909650939450505050565b600060208284031215611368578081fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461022c578182fd5b600080600080604085870312156113ac578081fd5b843567ffffffffffffffff808211156113c3578283fd5b6113cf888389016111ad565b909650945060208701359150808211156113e7578283fd5b506113f4878288016111ad565b95989497509550505050565b600060208284031215611411578081fd5b813567ffffffffffffffff811115611427578182fd5b610285848285016111ed565b600060208284031215611444578081fd5b5035919050565b60008282518085526020808601955080818302840101818601855b8481101561150a578583037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00189528151805115158452848101511515858501526040808201519085015260608082015173ffffffffffffffffffffffffffffffffffffffff16908501526080808201519085015260a09081015160c0918501829052906114f681860183611517565b9a86019a9450505090830190600101611466565b5090979650505050505050565b6000815180845261152f816020860160208601611764565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60008251611573818460208701611764565b9190910192915050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b901515815260200190565b90815260200190565b6000838252604060208301526102856040830184611517565b7fffffffff0000000000000000000000000000000000000000000000000000000091909116815260200190565b60208082526029908201527f47756573744d6f64756c65235f6578656375746547756573743a204e4f545f4560408201527f4e4f5547485f4741530000000000000000000000000000000000000000000000606082015260800190565b600060408252600660408301527f67756573743a000000000000000000000000000000000000000000000000000060608301526080602083015261022c608083018461144b565b60208082526033908201527f47756573744d6f64756c65235f6578656375746547756573743a2064656c656760408201527f61746543616c6c206e6f7420616c6c6f77656400000000000000000000000000606082015260800190565b600060408252600560408301527f73656c663a00000000000000000000000000000000000000000000000000000060608301526080602083015261022c608083018461144b565b60405181810167ffffffffffffffff8111828210171561175c57fe5b604052919050565b60005b8381101561177f578181015183820152602001611767565b838111156102f0575050600091015256fe5369676e617475726556616c696461746f72237265636f7665725369676e65723a20696e76616c6964207369676e6174757265202773272076616c75654d6f64756c6541757468235f7369676e617475726556616c69646174696f6e20494e56414c49445f464c41474c696242797465732372656164416464726573733a204f55545f4f465f424f554e44534c696242797465732372656164466972737455696e7431363a204f55545f4f465f424f554e44535369676e617475726556616c696461746f72237265636f7665725369676e65723a20696e76616c6964207369676e6174757265202776272076616c75655369676e617475726556616c696461746f72237265636f7665725369676e65723a20494e56414c49445f5349474e45524c696242797465732372656164427974657336363a204f55545f4f465f424f554e44535369676e617475726556616c696461746f72237265636f7665725369676e65723a20554e535550504f525445445f5349474e41545552455f545950454c69624279746573237265616455696e743855696e74383a204f55545f4f465f424f554e44534c69624279746573237265616442797465733a204f55545f4f465f424f554e44534c69624279746573237265616455696e7431363a204f55545f4f465f424f554e44534c696242797465732372656164427974657333323a20475245415445525f4f525f455155414c5f544f5f33325f4c454e4754485f52455155495245444d6f64756c6553656c6641757468236f6e6c7953656c663a204e4f545f415554484f52495a4544a2646970667358221220f4ae5b678749d76f724f6697e270897268915902932cd6dbc46f4a772926c55864736f6c63430007060033";

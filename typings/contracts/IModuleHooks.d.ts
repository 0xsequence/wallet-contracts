/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface IModuleHooksInterface extends ethers.utils.Interface {
  functions: {
    "addHook(bytes4,address)": FunctionFragment;
    "readHook(bytes4)": FunctionFragment;
    "removeHook(bytes4)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "addHook",
    values: [BytesLike, string]
  ): string;
  encodeFunctionData(functionFragment: "readHook", values: [BytesLike]): string;
  encodeFunctionData(
    functionFragment: "removeHook",
    values: [BytesLike]
  ): string;

  decodeFunctionResult(functionFragment: "addHook", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "readHook", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "removeHook", data: BytesLike): Result;

  events: {};
}

export class IModuleHooks extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: IModuleHooksInterface;

  functions: {
    addHook(
      _signature: BytesLike,
      _implementation: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "addHook(bytes4,address)"(
      _signature: BytesLike,
      _implementation: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    readHook(
      _signature: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "readHook(bytes4)"(
      _signature: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string]>;

    removeHook(
      _signature: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "removeHook(bytes4)"(
      _signature: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  addHook(
    _signature: BytesLike,
    _implementation: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "addHook(bytes4,address)"(
    _signature: BytesLike,
    _implementation: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  readHook(_signature: BytesLike, overrides?: CallOverrides): Promise<string>;

  "readHook(bytes4)"(
    _signature: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  removeHook(
    _signature: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "removeHook(bytes4)"(
    _signature: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    addHook(
      _signature: BytesLike,
      _implementation: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "addHook(bytes4,address)"(
      _signature: BytesLike,
      _implementation: string,
      overrides?: CallOverrides
    ): Promise<void>;

    readHook(_signature: BytesLike, overrides?: CallOverrides): Promise<string>;

    "readHook(bytes4)"(
      _signature: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    removeHook(_signature: BytesLike, overrides?: CallOverrides): Promise<void>;

    "removeHook(bytes4)"(
      _signature: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    addHook(
      _signature: BytesLike,
      _implementation: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "addHook(bytes4,address)"(
      _signature: BytesLike,
      _implementation: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    readHook(
      _signature: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "readHook(bytes4)"(
      _signature: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    removeHook(
      _signature: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "removeHook(bytes4)"(
      _signature: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    addHook(
      _signature: BytesLike,
      _implementation: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "addHook(bytes4,address)"(
      _signature: BytesLike,
      _implementation: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    readHook(
      _signature: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "readHook(bytes4)"(
      _signature: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    removeHook(
      _signature: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "removeHook(bytes4)"(
      _signature: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}

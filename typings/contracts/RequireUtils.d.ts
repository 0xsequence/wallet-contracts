/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface RequireUtilsInterface extends ethers.utils.Interface {
  functions: {
    "imageHashBlockHeight(bytes32)": FunctionFragment;
    "initialImageHash(address)": FunctionFragment;
    "requireAndIndexConfig(address,uint256,tuple[])": FunctionFragment;
    "requireConfig(address,uint256,tuple[])": FunctionFragment;
    "requireMinNonce(address,uint256)": FunctionFragment;
    "requireNonExpired(uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "imageHashBlockHeight",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "initialImageHash",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "requireAndIndexConfig",
    values: [string, BigNumberish, { weight: BigNumberish; signer: string }[]]
  ): string;
  encodeFunctionData(
    functionFragment: "requireConfig",
    values: [string, BigNumberish, { weight: BigNumberish; signer: string }[]]
  ): string;
  encodeFunctionData(
    functionFragment: "requireMinNonce",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "requireNonExpired",
    values: [BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "imageHashBlockHeight",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "initialImageHash",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "requireAndIndexConfig",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "requireConfig",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "requireMinNonce",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "requireNonExpired",
    data: BytesLike
  ): Result;

  events: {
    "RequiredConfig(address,bytes32,uint256,bytes)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "RequiredConfig"): EventFragment;
}

export class RequireUtils extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: RequireUtilsInterface;

  functions: {
    imageHashBlockHeight(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "imageHashBlockHeight(bytes32)"(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    initialImageHash(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "initialImageHash(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<[string]>;

    requireAndIndexConfig(
      _wallet: string,
      _threshold: BigNumberish,
      _members: { weight: BigNumberish; signer: string }[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "requireAndIndexConfig(address,uint256,tuple[])"(
      _wallet: string,
      _threshold: BigNumberish,
      _members: { weight: BigNumberish; signer: string }[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    requireConfig(
      _wallet: string,
      _threshold: BigNumberish,
      _members: { weight: BigNumberish; signer: string }[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "requireConfig(address,uint256,tuple[])"(
      _wallet: string,
      _threshold: BigNumberish,
      _members: { weight: BigNumberish; signer: string }[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    requireMinNonce(
      _wallet: string,
      _nonce: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[void]>;

    "requireMinNonce(address,uint256)"(
      _wallet: string,
      _nonce: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[void]>;

    requireNonExpired(
      _expiration: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[void]>;

    "requireNonExpired(uint256)"(
      _expiration: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[void]>;
  };

  imageHashBlockHeight(
    arg0: BytesLike,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "imageHashBlockHeight(bytes32)"(
    arg0: BytesLike,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  initialImageHash(arg0: string, overrides?: CallOverrides): Promise<string>;

  "initialImageHash(address)"(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<string>;

  requireAndIndexConfig(
    _wallet: string,
    _threshold: BigNumberish,
    _members: { weight: BigNumberish; signer: string }[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "requireAndIndexConfig(address,uint256,tuple[])"(
    _wallet: string,
    _threshold: BigNumberish,
    _members: { weight: BigNumberish; signer: string }[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  requireConfig(
    _wallet: string,
    _threshold: BigNumberish,
    _members: { weight: BigNumberish; signer: string }[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "requireConfig(address,uint256,tuple[])"(
    _wallet: string,
    _threshold: BigNumberish,
    _members: { weight: BigNumberish; signer: string }[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  requireMinNonce(
    _wallet: string,
    _nonce: BigNumberish,
    overrides?: CallOverrides
  ): Promise<void>;

  "requireMinNonce(address,uint256)"(
    _wallet: string,
    _nonce: BigNumberish,
    overrides?: CallOverrides
  ): Promise<void>;

  requireNonExpired(
    _expiration: BigNumberish,
    overrides?: CallOverrides
  ): Promise<void>;

  "requireNonExpired(uint256)"(
    _expiration: BigNumberish,
    overrides?: CallOverrides
  ): Promise<void>;

  callStatic: {
    imageHashBlockHeight(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "imageHashBlockHeight(bytes32)"(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    initialImageHash(arg0: string, overrides?: CallOverrides): Promise<string>;

    "initialImageHash(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<string>;

    requireAndIndexConfig(
      _wallet: string,
      _threshold: BigNumberish,
      _members: { weight: BigNumberish; signer: string }[],
      overrides?: CallOverrides
    ): Promise<void>;

    "requireAndIndexConfig(address,uint256,tuple[])"(
      _wallet: string,
      _threshold: BigNumberish,
      _members: { weight: BigNumberish; signer: string }[],
      overrides?: CallOverrides
    ): Promise<void>;

    requireConfig(
      _wallet: string,
      _threshold: BigNumberish,
      _members: { weight: BigNumberish; signer: string }[],
      overrides?: CallOverrides
    ): Promise<void>;

    "requireConfig(address,uint256,tuple[])"(
      _wallet: string,
      _threshold: BigNumberish,
      _members: { weight: BigNumberish; signer: string }[],
      overrides?: CallOverrides
    ): Promise<void>;

    requireMinNonce(
      _wallet: string,
      _nonce: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "requireMinNonce(address,uint256)"(
      _wallet: string,
      _nonce: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    requireNonExpired(
      _expiration: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "requireNonExpired(uint256)"(
      _expiration: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    RequiredConfig(
      _wallet: string | null,
      _imageHash: BytesLike | null,
      _threshold: null,
      _signers: null
    ): EventFilter;
  };

  estimateGas: {
    imageHashBlockHeight(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "imageHashBlockHeight(bytes32)"(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    initialImageHash(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "initialImageHash(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    requireAndIndexConfig(
      _wallet: string,
      _threshold: BigNumberish,
      _members: { weight: BigNumberish; signer: string }[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    "requireAndIndexConfig(address,uint256,tuple[])"(
      _wallet: string,
      _threshold: BigNumberish,
      _members: { weight: BigNumberish; signer: string }[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    requireConfig(
      _wallet: string,
      _threshold: BigNumberish,
      _members: { weight: BigNumberish; signer: string }[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    "requireConfig(address,uint256,tuple[])"(
      _wallet: string,
      _threshold: BigNumberish,
      _members: { weight: BigNumberish; signer: string }[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    requireMinNonce(
      _wallet: string,
      _nonce: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "requireMinNonce(address,uint256)"(
      _wallet: string,
      _nonce: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    requireNonExpired(
      _expiration: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "requireNonExpired(uint256)"(
      _expiration: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    imageHashBlockHeight(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "imageHashBlockHeight(bytes32)"(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    initialImageHash(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "initialImageHash(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    requireAndIndexConfig(
      _wallet: string,
      _threshold: BigNumberish,
      _members: { weight: BigNumberish; signer: string }[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "requireAndIndexConfig(address,uint256,tuple[])"(
      _wallet: string,
      _threshold: BigNumberish,
      _members: { weight: BigNumberish; signer: string }[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    requireConfig(
      _wallet: string,
      _threshold: BigNumberish,
      _members: { weight: BigNumberish; signer: string }[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "requireConfig(address,uint256,tuple[])"(
      _wallet: string,
      _threshold: BigNumberish,
      _members: { weight: BigNumberish; signer: string }[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    requireMinNonce(
      _wallet: string,
      _nonce: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "requireMinNonce(address,uint256)"(
      _wallet: string,
      _nonce: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    requireNonExpired(
      _expiration: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "requireNonExpired(uint256)"(
      _expiration: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
